{
  "openapi": "3.0.0",
  "info": {
    "title": "Flask API",
    "version": "1.0.0",
    "description": "API documentation for the Flask application"
  },
  "servers": [
    {
      "url": "http://localhost:5000",
      "description": "Local development server"
    }
  ],
  "paths": {
    "/users": {
      "get": {
        "summary": "Get all users",
        "responses": {
          "200": {
            "description": "Returns a JSON object with users from PostgreSQL, MongoDB, and Redis"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "summary": "Create a new user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  }
                },
                "required": ["name", "email"]
              }
            }
          },
          "responses": {
            "200": {
              "description": "User created successfully"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      },
      "put": {
        "summary": "Update a user's email",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  }
                },
                "required": ["name", "email"]
              }
            }
          },
          "responses": {
            "200": {
              "description": "User updated successfully"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      }
    },
    "/content": {
      "get": {
        "summary": "Get all content from MongoDB",
        "responses": {
          "200": {
            "description": "Returns a JSON array of content from MongoDB"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "summary": "Create new content in MongoDB",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "title": {
                    "type": "string"
                  }
                },
                "required": ["name", "email", "title"]
              }
            }
          },
          "responses": {
            "200": {
              "description": "Data inserted successfully"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      },
      "put": {
        "summary": "Update content in MongoDB",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "content": {
                    "type": "string"
                  }
                },
                "required": ["title", "content"]
              }
            }
          },
          "responses": {
            "200": {
              "description": "Content updated successfully"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      }
    },
    "/two-phase-commit": {
      "post": {
        "summary": "Execute two-phase commit logic",
        "responses": {
          "200": {
            "description": "Two-phase commit logic executed successfully"
          },
            "500": {
              "description": "Some database is running wild... catch it before you POST smth"
            }
        }
      }
    }
  }
}
